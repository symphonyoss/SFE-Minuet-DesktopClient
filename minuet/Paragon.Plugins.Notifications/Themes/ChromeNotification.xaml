<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:Paragon.Plugins.Notifications.Converters"
                    xmlns:controls="clr-namespace:Paragon.Plugins.Notifications.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Paragon.Plugins.Notifications;component/Themes/CloseButton.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="MessageStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#323333" />
        <Setter Property="FontFamily" Value="Calibri" />
        <Setter Property="MaxHeight" Value="60" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
        <Setter Property="VerticalAlignment" Value="Top" />
    </Style>

    <Style x:Key="TitleStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#323333" />
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="MaxHeight" Value="30" />
        <Setter Property="Margin" Value="0,4,4,2" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="ImageStyle" TargetType="Image">
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <BrushConverter x:Key="BrushConverter" />
    <converters:IsIconVisibleConverter x:Key="IsIconVisibleConverter" />
    <converters:PositionLeftOrRightConverter x:Key="PositionLeftOrRightConverter" />

    <Storyboard x:Key="HideToastRightAnimation">
        <DoubleAnimation 
            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)"
            To="400" 
            Duration="0:0:0.200" />
    </Storyboard>

    <Storyboard x:Key="HideToastLeftAnimation">
        <DoubleAnimation 
            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)"
            To="-400" 
            Duration="0:0:0.200" />
    </Storyboard>

    <Style TargetType="controls:Notification">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:Notification">
                    <Border BorderThickness="1" BorderBrush="#eaeaea" SnapsToDevicePixels="True">
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="10" ShadowDepth="0" Color="#d3d3d3" />
                        </Border.Effect>
                        <Grid Width="360">
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>

                            <Button x:Name="Grid" Command="{TemplateBinding Command}" Background="{TemplateBinding Background}" 
                                Margin="0" Padding="0"  HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>

                                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="80px" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>

                                        <Rectangle Height="80" Width="80" Fill="#f5f5f5" />

                                        <Image Grid.Column="0"
                                        Source="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IconUrl, TargetNullValue={x:Null}}" 
                                        Style="{StaticResource ImageStyle}"
                                        Width="80" Height="80" />

                                        <Button Grid.Column="1"
                                        Command="{TemplateBinding CloseCommand}"
                                        Width="16" Height="16" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,10,12,0" Focusable="False" 
                                        Style="{StaticResource CloseButtonStyle}" />

                                        <DockPanel Grid.Column="1" Margin="8">
                                            <TextBlock DockPanel.Dock="Top" Text="{TemplateBinding Title}" Style="{StaticResource TitleStyle}" />
                                            <!--<TextBlock DockPanel.Dock="Bottom" Text="{TemplateBinding ContextMessage}" Style="{StaticResource MessageStyle}" />-->
                                            <TextBlock Text="{TemplateBinding Message}" Style="{StaticResource MessageStyle}" />
                                        </DockPanel>
                                    </Grid>
                                </Grid>
                            </Button>

                            <ItemsControl Grid.Row="1" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsRemoving}" Value="True" />
                    <Condition Binding="{Binding Path=Position, Converter={StaticResource PositionLeftOrRightConverter}}" Value="Left" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource HideToastLeftAnimation}" />
                </MultiDataTrigger.EnterActions>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsRemoving}" Value="True" />
                    <Condition Binding="{Binding Path=Position, Converter={StaticResource PositionLeftOrRightConverter}}" Value="Right" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource HideToastRightAnimation}" />
                </MultiDataTrigger.EnterActions>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>