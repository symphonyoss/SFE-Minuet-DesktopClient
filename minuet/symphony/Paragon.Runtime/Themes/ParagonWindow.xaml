<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Paragon.Runtime.WPF">

    <BooleanToVisibilityConverter x:Key="VisibilityConverter"/>

    <Style TargetType="{x:Type controls:WindowButton}" x:Key="WindowButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="Chrome" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            Background="{TemplateBinding Background}" 
                            Margin="0,0,0,0" 
                            SnapsToDevicePixels="True">
                        <Viewbox StretchDirection="DownOnly" Stretch="Uniform">
                            <ContentPresenter x:Name="contentPresenter"
                                              ContentTemplate="{TemplateBinding ContentTemplate}" 
                                              Content="{TemplateBinding Content}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                              HorizontalAlignment="Center"
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              TextBlock.Foreground="{TemplateBinding Foreground}"
                                              VerticalAlignment="Center" />
                        </Viewbox>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{DynamicResource TransparentWhiteBrush}" />
        <Setter Property="FontFamily" Value="Webdings"/>
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Foreground" Value="{DynamicResource WindowButtonForegroundBrush}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource SemiTransparentWhiteBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type controls:ParagonWindow}">
        <Setter Property="TitlebarHeight" Value="25"/>
        <Setter Property="GlowBrush" Value="{DynamicResource GlowBrush}"/>
        <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:ParagonWindow}">
                    <Border x:Name="outsideBorder" BorderBrush="{Binding GlowBrush, RelativeSource={RelativeSource AncestorType=controls:ParagonWindow}}" BorderThickness="0">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ResizeMode, RelativeSource={RelativeSource AncestorType=controls:ParagonWindow}}" Value="NoResize"/>
                                            <Condition Binding="{Binding CustomChromeEnabled, RelativeSource={RelativeSource AncestorType=controls:ParagonWindow}}" Value="False"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Margin" Value="1,1,1,1"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Border x:Name="windowBorder"  BorderBrush="Transparent">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=controls:ParagonWindow}}" Value="Maximized"/>
                                                <Condition Binding="{Binding CustomChromeEnabled, RelativeSource={RelativeSource AncestorType=controls:ParagonWindow}}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="BorderThickness" Value="6"/>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Grid Background="{TemplateBinding Background}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid.Style>
                                    <Style TargetType="Grid">
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding ResizeMode, RelativeSource={RelativeSource AncestorType=controls:ParagonWindow}}" Value="NoResize"/>
                                                    <Condition Binding="{Binding CustomChromeEnabled, RelativeSource={RelativeSource AncestorType=controls:ParagonWindow}}" Value="True"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Margin" Value="0,0,8,8"/>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>

                                <!-- Titlebar -->
                                <Grid Background="{DynamicResource WindowTitleBrush}" 
                                  Grid.Row="0" Height="{TemplateBinding TitlebarHeight}"
                                  Visibility="{Binding CustomChromeEnabled, RelativeSource={RelativeSource AncestorType=controls:ParagonWindow}, Converter={StaticResource VisibilityConverter}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="0.9*"/>
                                        <RowDefinition Height="0.1*"/>
                                    </Grid.RowDefinitions>

                                    <!-- Window icon -->
                                    <Image Source="{TemplateBinding Icon}" RenderOptions.EdgeMode="Aliased" Panel.ZIndex="2"
                                       Grid.Column="0" Grid.Row="0" RenderOptions.BitmapScalingMode="HighQuality" Margin="4"
                                       VerticalAlignment="Center" HorizontalAlignment="Center"
                                       Visibility="{Binding ShowIconInTitleBar, RelativeSource={RelativeSource AncestorType=controls:ParagonWindow}, Converter={StaticResource VisibilityConverter}}"/>

                                    <!-- Window title -->
                                    <TextBlock VerticalAlignment="Center" Panel.ZIndex="2"
                                           HorizontalAlignment="Left"
                                           Grid.Column="1" Grid.Row="0"
                                           Visibility="{Binding WindowTitleVisible, RelativeSource={RelativeSource AncestorType=controls:ParagonWindow}, Converter={StaticResource VisibilityConverter}}"
                                           FontSize="{TemplateBinding TitlebarFontSize}" 
                                           FontFamily="Segoe UI Light, Lucida Sans Unicode, Verdana" 
                                           Padding="4,0,4,0"
                                           TextTrimming="CharacterEllipsis"
                                           Foreground="{DynamicResource WindowTitleTextBrush}"
                                           Background="Transparent" 
                                           Text="{TemplateBinding Title}"/>

                                    <!-- Reference point for showing popups in the top right corner below the title bar -->
                                    <Rectangle x:Name="PopupAlignmentPoint" 
                                           Grid.Column="2" Grid.Row="0"
                                           Width="0" Height="0"
                                           VerticalAlignment="Bottom"
                                           HorizontalAlignment="Right"/>

                                    <!-- Buttons -->
                                    <StackPanel Orientation="Horizontal" Panel.ZIndex="4" Grid.Column="2" Grid.Row="0"
                                            HorizontalAlignment="Right" Height="{TemplateBinding TitlebarHeight}">
                                        <ContentPresenter x:Name="PART_WindowCommands" Height="{TemplateBinding TitlebarHeight}"
                                                      Content="{Binding WindowCommands, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ParagonWindow}}}" 
                                                      Margin="0"/>
                                        <controls:WindowButton x:Name="minimizeButton" 
                                            Style="{StaticResource WindowButtonStyle}" 
                                            Visibility="{Binding MinMaxButtonsVisible, RelativeSource={RelativeSource AncestorType=controls:ParagonWindow}, Converter={StaticResource VisibilityConverter}}"
                                            Width="{Binding Height, RelativeSource={RelativeSource Self}}"
                                            MinWidth="30"
                                            Content="0"/>
                                        <controls:WindowButton x:Name="restoreButton" 
                                            Style="{StaticResource WindowButtonStyle}" 
                                            Visibility="{Binding MinMaxButtonsVisible, RelativeSource={RelativeSource AncestorType=controls:ParagonWindow}, Converter={StaticResource VisibilityConverter}}"
                                            Width="{Binding Height, RelativeSource={RelativeSource Self}}"
                                            MinWidth="30"
                                            Content="1"/>
                                        <controls:WindowButton x:Name="closeButton" 
                                            Style="{StaticResource WindowButtonStyle}" 
                                            Width="{Binding Height, RelativeSource={RelativeSource Self}}"
                                            MinWidth="30"
                                            Content="r"/>
                                    </StackPanel>
                                    <Border BorderBrush="{DynamicResource WindowButtonForegroundBrush}" Grid.Column="0" Grid.ColumnSpan="3" BorderThickness="0,0,0,1" Grid.Row="1"/>
                                </Grid>

                                <!-- Window content -->
                                <ContentPresenter Grid.Row="1" Content="{TemplateBinding Content}"/>
                            </Grid>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="WindowStyle" Value="None">
                <Setter Property="TitlebarHeight" Value="0"/>
                <Setter Property="GlowEnabled" Value="False"/>
            </Trigger>
            <Trigger Property="CustomChromeEnabled" Value="False">
                <Setter Property="GlowEnabled" Value="False"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AlarmParagonWindow" TargetType="{x:Type controls:ParagonWindow}">
        <Setter Property="TitlebarHeight" Value="25"/>
        <Setter Property="GlowBrush" Value="{DynamicResource AlarmGlowBrush}"/>
        <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:ParagonWindow}">
                    <Border x:Name="outsideBorder" BorderBrush="{Binding GlowBrush, RelativeSource={RelativeSource AncestorType=controls:ParagonWindow}}" BorderThickness="0">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ResizeMode, RelativeSource={RelativeSource AncestorType=controls:ParagonWindow}}" Value="NoResize"/>
                                            <Condition Binding="{Binding CustomChromeEnabled, RelativeSource={RelativeSource AncestorType=controls:ParagonWindow}}" Value="False"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Margin" Value="1,1,1,1"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Border x:Name="windowBorder"  BorderBrush="Transparent">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=controls:ParagonWindow}}" Value="Maximized"/>
                                                <Condition Binding="{Binding CustomChromeEnabled, RelativeSource={RelativeSource AncestorType=controls:ParagonWindow}}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="BorderThickness" Value="6"/>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Grid Background="{TemplateBinding Background}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid.Style>
                                    <Style TargetType="Grid">
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding ResizeMode, RelativeSource={RelativeSource AncestorType=controls:ParagonWindow}}" Value="NoResize"/>
                                                    <Condition Binding="{Binding CustomChromeEnabled, RelativeSource={RelativeSource AncestorType=controls:ParagonWindow}}" Value="True"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Margin" Value="0,0,8,8"/>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>

                                <!-- Titlebar -->
                                <Grid Background="{DynamicResource AlarmWindowTitleBrush}" 
                                  Grid.Row="0" Height="{TemplateBinding TitlebarHeight}"
                                  Visibility="{Binding CustomChromeEnabled, RelativeSource={RelativeSource AncestorType=controls:ParagonWindow}, Converter={StaticResource VisibilityConverter}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="0.9*"/>
                                        <RowDefinition Height="0.1*"/>
                                    </Grid.RowDefinitions>

                                    <!-- Window icon -->
                                    <Image Source="{TemplateBinding Icon}" RenderOptions.EdgeMode="Aliased" Panel.ZIndex="2"
                                       Grid.Column="0" Grid.Row="0" RenderOptions.BitmapScalingMode="HighQuality" Margin="4"
                                       VerticalAlignment="Center" HorizontalAlignment="Center"
                                       Visibility="{Binding ShowIconInTitleBar, RelativeSource={RelativeSource AncestorType=controls:ParagonWindow}, Converter={StaticResource VisibilityConverter}}"/>

                                    <!-- Window title -->
                                    <TextBlock VerticalAlignment="Center" Panel.ZIndex="2"
                                           HorizontalAlignment="Left"
                                           Grid.Column="1" Grid.Row="0"
                                           Visibility="{Binding WindowTitleVisible, RelativeSource={RelativeSource AncestorType=controls:ParagonWindow}, Converter={StaticResource VisibilityConverter}}"
                                           FontSize="{TemplateBinding TitlebarFontSize}" 
                                           FontFamily="Segoe UI Light, Lucida Sans Unicode, Verdana" 
                                           Padding="4,0,4,0"
                                           TextTrimming="CharacterEllipsis"
                                           Foreground="{DynamicResource AlarmWindowTitleTextBrush}"
                                           Background="Transparent" 
                                           Text="{TemplateBinding Title}"/>

                                    <!-- Reference point for showing popups in the top right corner below the title bar -->
                                    <Rectangle x:Name="PopupAlignmentPoint" 
                                           Grid.Column="2" Grid.Row="0"
                                           Width="0" Height="0"
                                           VerticalAlignment="Bottom"
                                           HorizontalAlignment="Right"/>

                                    <!-- Buttons -->
                                    <StackPanel Orientation="Horizontal" Panel.ZIndex="4" Grid.Column="2" Grid.Row="0"
                                            HorizontalAlignment="Right" Height="{TemplateBinding TitlebarHeight}">
                                        <ContentPresenter x:Name="PART_WindowCommands" Height="{TemplateBinding TitlebarHeight}"
                                                      Content="{Binding WindowCommands, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ParagonWindow}}}" 
                                                      Margin="0"/>
                                        <controls:WindowButton x:Name="minimizeButton" 
                                            Style="{StaticResource WindowButtonStyle}" 
                                            Visibility="{Binding MinMaxButtonsVisible, RelativeSource={RelativeSource AncestorType=controls:ParagonWindow}, Converter={StaticResource VisibilityConverter}}"
                                            Width="{Binding Height, RelativeSource={RelativeSource Self}}"
                                            MinWidth="30"
                                            Content="0"/>
                                        <controls:WindowButton x:Name="restoreButton" 
                                            Style="{StaticResource WindowButtonStyle}" 
                                            Visibility="{Binding MinMaxButtonsVisible, RelativeSource={RelativeSource AncestorType=controls:ParagonWindow}, Converter={StaticResource VisibilityConverter}}"
                                            Width="{Binding Height, RelativeSource={RelativeSource Self}}"
                                            MinWidth="30"
                                            Content="1"/>
                                        <controls:WindowButton x:Name="closeButton" 
                                            Style="{StaticResource WindowButtonStyle}" 
                                            Width="{Binding Height, RelativeSource={RelativeSource Self}}"
                                            MinWidth="30"
                                            Content="r"/>
                                    </StackPanel>
                                    <Border BorderBrush="{DynamicResource WindowButtonForegroundBrush}" Grid.Column="0" Grid.ColumnSpan="3" BorderThickness="0,0,0,1" Grid.Row="1"/>
                                </Grid>

                                <!-- Window content -->
                                <ContentPresenter Grid.Row="1" Content="{TemplateBinding Content}"/>
                            </Grid>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="WindowStyle" Value="None">
                <Setter Property="TitlebarHeight" Value="0"/>
                <Setter Property="GlowEnabled" Value="False"/>
            </Trigger>
            <Trigger Property="CustomChromeEnabled" Value="False">
                <Setter Property="GlowEnabled" Value="False"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type controls:WindowCommands}">
        <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:WindowCommands">
                    <ControlTemplate.Resources>
                        <ResourceDictionary>
                            <Style x:Key="WindowCommandButtonStyle" TargetType="ButtonBase">
                                <Setter Property="Background" Value="{DynamicResource TransparentWhiteBrush}" />
                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                <Setter Property="Padding" Value="1" />
                                <Setter Property="Width" Value="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=controls:WindowCommands}}"/>
                                <Setter Property="MinWidth" Value="30"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                                            <Grid Background="{TemplateBinding Background}">
                                                <ContentPresenter x:Name="contentPresenter"
                                                                  HorizontalAlignment="Center"
                                                                  TextBlock.TextAlignment="Center"
                                                                  TextBlock.Foreground="{DynamicResource WindowButtonForegroundBrush}"
                                                                  VerticalAlignment="Center"
                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                  RecognizesAccessKey="True"
                                                                  Margin="0" />
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="contentPresenter" Property="Opacity" Value="1" />
                                                    <Setter Property="Background" Value="{DynamicResource SemiTransparentWhiteBrush}" />
                                                    <Setter TargetName="contentPresenter" Property="TextBlock.Foreground" Value="{DynamicResource BlackBrush}" />
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="false">
                                                    <Setter Property="Foreground" Value="#ADADAD" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <Style TargetType="ToggleButton" BasedOn="{StaticResource WindowCommandButtonStyle}"/>
                            <Style TargetType="Button" BasedOn="{StaticResource WindowCommandButtonStyle}"/>
                        </ResourceDictionary>
                    </ControlTemplate.Resources>

                    <StackPanel Orientation="Horizontal" VerticalAlignment="Stretch">
                        <ItemsControl IsTabStop="False"
                                  ItemsSource="{Binding Items, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:WindowCommands}}}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>